// Core types for ListingBoost Pro

/**
 * User account interface for ListingBoost Pro application.
 *
 * Represents a registered user with subscription plan information and audit timestamps.
 * Users can have different subscription levels that determine feature access and usage limits.
 *
 * @interface User
 * @usedBy Authentication system, subscription management, user dashboard
 * @relatedTo Listing (via userId foreign key), subscription system
 * @example
 * ```typescript
 * const user: User = {
 *   id: 'uuid-string',
 *   email: 'user@example.com',
 *   name: 'John Doe',
 *   plan: 'growth',
 *   createdAt: new Date('2024-01-01'),
 *   updatedAt: new Date('2024-01-15')
 * }
 * ```
 */
export interface User {
  /** Unique identifier for the user (UUID) */
  id: string
  /** User's email address (unique, used for authentication) */
  email: string
  /** Optional display name for the user */
  name?: string
  /** Current subscription plan determining feature access and limits */
  plan: 'free' | 'starter' | 'growth' | 'professional'
  /** Timestamp when the user account was created */
  createdAt: Date
  /** Timestamp when the user account was last updated */
  updatedAt: Date
}

/**
 * Airbnb listing interface for property data and analysis tracking.
 *
 * Represents an Airbnb property that has been added for analysis by a user.
 * Contains basic listing information, pricing, analysis results, and audit timestamps.
 * Core entity for the listing analysis and optimization workflow.
 *
 * @interface Listing
 * @usedBy Analysis system, dashboard, scoring engine, results display
 * @relatedTo User (via userId), AnalysisResult (via listingId), database listings table
 * @example
 * ```typescript
 * const listing: Listing = {
 *   id: 'listing-uuid',
 *   userId: 'user-uuid',
 *   airbnbUrl: 'https://airbnb.com/rooms/12345',
 *   title: 'Beautiful apartment in Berlin',
 *   description: 'Spacious 2BR apartment...',
 *   price: 89,
 *   score: 750,
 *   lastAnalyzed: new Date('2024-01-15'),
 *   createdAt: new Date('2024-01-01'),
 *   updatedAt: new Date('2024-01-15')
 * }
 * ```
 */
export interface Listing {
  /** Unique identifier for the listing (UUID) */
  id: string
  /** Foreign key reference to the User who owns this listing */
  userId: string
  /** Original Airbnb URL for the property (format: https://airbnb.com/rooms/[ID]) */
  airbnbUrl: string
  /** Property title/name as displayed on Airbnb */
  title: string
  /** Full property description from Airbnb */
  description: string
  /** Nightly price in the listing's currency (typically EUR) */
  price: number
  /** Optional overall analysis score (0-1000 point scale) */
  score?: number
  /** Optional timestamp of last analysis run */
  lastAnalyzed?: Date
  /** Timestamp when the listing was first added */
  createdAt: Date
  /** Timestamp when the listing was last updated */
  updatedAt: Date
}

/**
 * Analysis result interface containing comprehensive listing evaluation data.
 *
 * Represents the complete analysis outcome for a specific listing, including
 * overall score, detailed recommendations, and granular metrics breakdown.
 * Generated by the scoring system and AI analysis engine.
 *
 * @interface AnalysisResult
 * @usedBy Results dashboard, recommendations system, scoring engine output
 * @relatedTo Listing (via listingId), Recommendation array, AnalysisMetrics
 * @example
 * ```typescript
 * const result: AnalysisResult = {
 *   id: 'analysis-uuid',
 *   listingId: 'listing-uuid',
 *   score: 750,
 *   recommendations: [...],
 *   metrics: { titleScore: 85, descriptionScore: 70, ... },
 *   createdAt: new Date('2024-01-15')
 * }
 * ```
 */
export interface AnalysisResult {
  /** Unique identifier for the analysis result (UUID) */
  id: string
  /** Foreign key reference to the analyzed Listing */
  listingId: string
  /** Overall analysis score (0-1000 point scale) */
  score: number
  /** Array of actionable recommendations for listing improvement */
  recommendations: Recommendation[]
  /** Detailed metrics breakdown by category */
  metrics: AnalysisMetrics
  /** Timestamp when the analysis was completed */
  createdAt: Date
}

/**
 * Individual recommendation interface for listing improvements.
 *
 * Represents a specific actionable suggestion for optimizing a listing,
 * categorized by improvement area with priority ranking and impact estimation.
 * Generated by AI analysis and scoring algorithms.
 *
 * @interface Recommendation
 * @usedBy AnalysisResult, recommendations dashboard, improvement tracking
 * @relatedTo AnalysisResult (as array element), scoring system categories
 * @example
 * ```typescript
 * const recommendation: Recommendation = {
 *   category: 'title',
 *   priority: 'high',
 *   title: 'Optimize listing title for SEO',
 *   description: 'Add location keywords and unique selling points to improve visibility',
 *   impact: 25
 * }
 * ```
 */
export interface Recommendation {
  /** Category of improvement area (aligns with scoring system categories) */
  category: 'title' | 'description' | 'pricing' | 'photos' | 'amenities'
  /** Priority level for implementing this recommendation */
  priority: 'high' | 'medium' | 'low'
  /** Short, actionable title for the recommendation */
  title: string
  /** Detailed explanation of the recommended improvement */
  description: string
  /** Estimated impact in points on the overall score (0-100 scale) */
  impact: number
}

/**
 * Analysis metrics interface for detailed scoring breakdown.
 *
 * Contains individual scores for each major analysis category, providing
 * granular insight into listing performance across different optimization areas.
 * Used for detailed reporting and identifying specific improvement opportunities.
 *
 * @interface AnalysisMetrics
 * @usedBy AnalysisResult, detailed dashboard views, performance tracking
 * @relatedTo AnalysisResult (as metrics property), scoring system categories
 * @scoreRange 0-100 for each category score
 * @example
 * ```typescript
 * const metrics: AnalysisMetrics = {
 *   titleScore: 85,
 *   descriptionScore: 70,
 *   pricingScore: 90,
 *   photosScore: 65,
 *   amenitiesScore: 80
 * }
 * ```
 */
export interface AnalysisMetrics {
  /** Score for listing title optimization (0-100 scale) */
  titleScore: number
  /** Score for listing description quality and completeness (0-100 scale) */
  descriptionScore: number
  /** Score for pricing strategy and competitiveness (0-100 scale) */
  pricingScore: number
  /** Score for photo quality, quantity, and presentation (0-100 scale) */
  photosScore: number
  /** Score for amenities availability and appeal (0-100 scale) */
  amenitiesScore: number
}
